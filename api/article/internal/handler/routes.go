// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"github.com/lius-new/blog-backend/api/article/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AnalyzerMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/",
					Handler: GetArticlesByPageWithViewHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/:search",
					Handler: SearchArticleHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/id",
					Handler: GetArticleByIdWithViewHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/tags",
					Handler: GetArticleByTagNameWithViewHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/articles"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AnalyzerMiddleware, serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/backend",
					Handler: GetArticlesByPageWithBackendHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/backend/create",
					Handler: CreateArticleHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/backend/deletet/id",
					Handler: DeleteArticleHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/backend/id",
					Handler: GetArticleByIdWithBackendHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/backend/modify/content",
					Handler: ModifyArticleContentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/backend/modify/cover",
					Handler: ModifyArticleCoverHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/backend/modify/desc",
					Handler: ModifyArticleDescHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/backend/modify/tag",
					Handler: ModifyArticleTagHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/backend/modify/title",
					Handler: ModifyArticleTitleHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/backend/modify/visiable",
					Handler: ModifyArticleVisiableHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/backend/tag",
					Handler: GetArticleByTagNameWithBackendHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/articles"),
	)
}
