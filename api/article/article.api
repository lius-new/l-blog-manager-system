syntax = "v1"

info (
	title:  "article service"
	desc:   "article content service"
	author: "lius-new"
	email:  "liushui_new@126.com"
)

// viewsReq: 批量访问文章的请求参数
type viewsReq {
	PageNum  int `json:"page_num"` // 多少页
	PageSize int `json:"page_size"` // 每页多少条数据
}

type (
	// article: 文章类型
	Article {
		Id          string   `json:"id"` // 文章id
		Title       string   `json:"title"` // 文章标题
		Description string   `json:"description"` // 文章描述
		Tags        []string `json:"tags"` // 文章tag
		UpdateAt    int64    `json:"updateAt"` // 文章更新时间
	}
	// viewsResp: 批量访问文章的响应类型, 包含响应内容
	viewsResp {
		Data   []Article `json:"data"` // 当前页的文章数据
		Status bool      `json:"status"` // 是否访问成功
	}
)

@server (
	prefix: /articles
)
service article-api {
	@handler GetArticlesInFrontend
	get / (viewsReq) returns (viewsResp) // 批量查看文章的请求声明

	@handler GetArticleInFrontend
	get /:id returns (viewsResp) // 查看指定文章的请求声明
}

type (
	// articleBackend: 文章类型(后台)
	ArticleBackend {
		Id          string   `json:"id"` // 文章id
		Title       string   `json:"title"` // 文章标题
		Content     string   `json:"content"` // 文章内容
		Description string   `json:"descritipn"` // 文章描述
		Tags        []string `json:"tags"` // 文章tag
		Covers      []string `json:"covers"` // 文章Cover图片
		Status      bool     `json:"status"` // 文章状态
		CreateAt    int64    `json:"createAt"` // 文章创建时间
		UpdateAt    int64    `json:"updateAt"` // 文章更新时间
		DeleteAt    int64    `json:"deleteAt"` // 删除更新时间
	}
	// viewsResp: 批量访问文章的响应类型, 包含响应内容(后台)
	viewsRespInBackend {
		Data   []ArticleBackend `json:"data"`
		Status bool             `json:"status"`
	}
	// reqInBackend: 创建,更新文章需要提交的参数
	reqInBackend {
		Id          string   `json:"id"` // 文章id
		Title       string   `json:"title"` // 文章标题
		Content     string   `json:"content"` // 文章内容
		Description string   `json:"descritipn"` // 文章描述
		Tags        []string `json:"tags"` // 文章tag
		Covers      []string `json:"covers"` // 文章Cover图片
		Status      bool     `json:"status"` // 文章状态
	}
	// respInBackend: 创建,更新,删除文章接口调用后返回的结果
	respInBackend {
		Data   ArticleBackend `json:"data"`
		Status bool           `json:"status"`
	}
)

@server (
	prefix:     /articles
	middleware: AuthMiddleware
)
service article-api {
	@handler GetArticlesInBackend
	get /auth (viewsReq) returns (viewsRespInBackend) // 批量查看文章的请求声明(后台. 需要权限校验)

	@handler GetArticleInBackend
	get /:id/auth returns (ArticleBackend) // 查看文章的请求声明(后台. 需要权限校验)

	@handler CreateArticlesInBackend
	post /auth (reqInBackend) returns (respInBackend) // 添加文章的请求声明(后台. 需要权限校验)

	@handler ModifyArticlesInBackend
	put /auth (reqInBackend) returns (respInBackend) // 修改文章的请求声明(后台. 需要权限校验)

	@handler DeleteArticlesInBackend
	delete /:id/auth returns (respInBackend) // 删除文章的请求声明(后台. 需要权限校验)
}

